:root {
  --theme-0: #ae5ef2;
  --theme-1: #2f8fcf;
  --theme-2: #2fcf51;
  --theme-3: #f2e75e;
  --theme-4: #e95181;
  --theme-5: #ae8ebf;
  --theme-6: #ff8249;
  --theme-7: #5ef2ff;
  --theme-8: #747dff;
  --theme-9: #e95181;
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  background-color: var(--theme-0);
  transition: background-color .5s ease .2s;
}

.container {
  max-width: max-content;
  min-height: 100vh;
  margin-inline: auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 2rem;
}

.nav {
  --svg-size: 2.5rem;
  --svg-padding: .5rem;
  --duration: .4s;

  padding: var(--padding-block) var(--padding-inline);
  background-color: aliceblue;
  border-radius: .5rem;
  box-shadow: 4px 4px 10px 0px rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  isolation: isolate;

  &>[class*='icon'] {
    cursor: pointer;

    svg {
      width: var(--svg-size);
      aspect-ratio: 1;
      padding: var(--svg-padding);
      display: block;
    }
  }

  .indicator {
    background-color: #000000;
    position: absolute;
    top: var(--padding-block);
    z-index: -1;
  }
}

.horizontal-nav {
  --padding-block: .5rem;
  --padding-inline: 1rem;
  --icon-gap: 1rem;

  gap: var(--icon-gap);

  &__indicator {
    width: var(--svg-size);
    aspect-ratio: 1;
    border-radius: 50%;
    left: var(--padding-inline);
    transition: left var(--duration) cubic-bezier(1, -0.20, 0, 1.20);

    &.animate {
      animation: animateCircle var(--duration) ease-in-out;
    }
  }
}

@keyframes animateCircle {
  0% {
    scale: 1;
  }

  5% {
    scale: 1.20 .85;
  }

  80% {
    scale: 1.20 .85;
  }

  90% {
    scale: .95 1.15;
  }

  95% {
    scale: 1.20 .85;
  }

  100% {
    scale: 1;
  }
}

.vertical-nav {
  --padding-block: 1rem;
  --padding-inline: .7rem;
  --icon-gap: 1.3rem;

  margin-inline-start: calc(var(--padding-inline) / 2);
  flex-direction: column;
  gap: var(--icon-gap);

  &__indicator {
    width: calc(var(--padding-inline) / 2);
    height: var(--svg-size);
    left: calc(var(--padding-inline) / 2);
    transition: top var(--duration) cubic-bezier(1, -0.4, 0, 1.4);
  }
}

@for $i from 0 through 9 {
  div[data-id='#{$i}']>svg {
    stroke: var(--theme-#{$i});
  }
}